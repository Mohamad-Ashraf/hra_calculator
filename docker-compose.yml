version: '3.4'

services:
  app: &app
    build:
      context: .
      dockerfile: ./.docker/development/app/Dockerfile
      args:
        RUBY_VERSION: '2.6.3'
        BUNDLER_VERSION: '2.0.2'
        NODE_MAJOR: '11'
        YARN_VERSION: '1.17.3'
    image: hra_calculator_app:0.1.0
    tmpfs:
      - /tmp
    networks:
      - local

  web: &web
    build:
      context: .
      dockerfile: ./.docker/production/web/Dockerfile
    image: hra_calculator_web:0.1.0
    tmpfs:
      - /tmp
    networks:
      - local

  backend: &backend
    <<: *app
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/bundle
      - node_modules:/app/node_modules

    environment:
      - RAILS_ENV=${RAILS_ENV:-production}
      - REDIS_URL=redis://redis:6379/
      - BOOTSNAP_CACHE_DIR=/bundle/bootsnap
      - WEB_CONCURRENCY=1
      - HISTFILE=/app/log/.bash_history
      - EDITOR=vi

    depends_on:
      - mongo
      - redis

  frontend: &frontend
    <<: *web
    volumes:
      - node_modules:/app/node_modules

    environment:
      - NODE_ENV=production
      - WEB_CONCURRENCY=1
      - HISTFILE=/app/log/.bash_history
      - EDITOR=vi

  angular:
    <<: *frontend
    #command: bash -c "cd clients/html && cp src/environments/environment.prod.ts src/environments/environment.ts && rm -rf node_modules && NG_CLI_ANALYTICS=false npm install && ng serve --host 0.0.0.0 --port 4200 --disable-host-check"
    #command: bash -c "nginx -g daemon off"
    ports:
      - '8080:80'

  rails:
    <<: *backend
    command: bash -c "rm -f tmp/pids/server.pid && bundle &&  bundle exec rails server -p 3000 -b '0.0.0.0'"
    ports:
      - '3001:3000'

  mongo:
    image: mongo:latest
    ports:
      - 27017
    networks:
      - local

  redis:
    image: redis:3.2-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    networks:
      - local

volumes:
  redis:
  bundle:
  node_modules:
  rails_cache:

networks:
  local:
